{"title":"Flink","uid":"e3edccc88bdb962a2f18d70775d79554","slug":"Flink","date":"2022-05-17T01:50:05.000Z","updated":"2022-05-17T01:50:37.893Z","comments":true,"path":"api/articles/Flink.json","keywords":null,"cover":[],"content":"<h1 id=\"What-is-Apache-Flink\"><a href=\"#What-is-Apache-Flink\" class=\"headerlink\" title=\"What is Apache Flink?\"></a>What is Apache Flink?</h1><p><a href=\"https://flink.apache.org/flink-architecture.html\">Apache Flink</a><br>Apache Flink is a framework and distributed processing engine for stateful computations over unbounded and bounded data streams. Flink has been designed to run in all common cluster environments, perform computations at in-memory speed and at any scale.</p>\n<h1 id=\"Application-scenarios\"><a href=\"#Application-scenarios\" class=\"headerlink\" title=\"Application scenarios\"></a>Application scenarios</h1><ul>\n<li>实时报表</li>\n<li>广告投放</li>\n<li>实施推荐</li>\n<li>实时数据采集</li>\n<li>信息推送</li>\n<li>订单状态跟踪</li>\n<li>实时结算</li>\n<li>实时报警</li>\n<li>风险检测</li>\n</ul>\n<h1 id=\"Lambda架构\"><a href=\"#Lambda架构\" class=\"headerlink\" title=\"Lambda架构\"></a>Lambda架构</h1><h2 id=\"设计理念\"><a href=\"#设计理念\" class=\"headerlink\" title=\"设计理念\"></a>设计理念</h2><p>Lambda架构的设计是为了在处理大规模数据时，同时发挥流处理和批处理的优势。通过批处理提供全面、准确的数据，通过流处理提供低延迟的数据，从而达到平衡延迟、吞吐量和容错性的目的。为了满足下游的即席查询，批处理和流处理的结果会进行合并。</p>\n<h2 id=\"组成\"><a href=\"#组成\" class=\"headerlink\" title=\"组成\"></a>组成</h2><ul>\n<li>Batch Layer：批处理层</li>\n<li>Speed Layer：加速处理层</li>\n<li>Serving Layer：服务层、合并层</li>\n</ul>\n<h1 id=\"系统架构\"><a href=\"#系统架构\" class=\"headerlink\" title=\"系统架构\"></a>系统架构</h1><p><img src=\"../img/2022-05-17-09-36.png\"></p>\n<h1 id=\"Exactly-Once语义\"><a href=\"#Exactly-Once语义\" class=\"headerlink\" title=\"Exactly-Once语义\"></a>Exactly-Once语义</h1><p>发送到消息系统的消息只能被消费端处理且仅处理一次，Exactly-Once语义是消息系统和流式计算系统中消息流转的最理想状态，但是在业界并没有太多理想的实现。因为真正意义上的Exactly-Once依赖消息系统的服务端、消息系统的客户端和用户消费逻辑这三者状态的协调。例如，当您的消费端完成一条消息的消费处理后出现异常宕机，而消费端重启后由于消费的位点没有同步到消息系统的服务端，该消息有可能被重复消费。</p>\n","feature":true,"text":"What is Apache Flink?Apache FlinkApache Flink is a framework and distributed processing engine for stateful computations over unbounded and ...","link":"","photos":[],"count_time":{"symbolsCount":772,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Knowledge","slug":"Knowledge","count":4,"path":"api/tags/Knowledge.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#What-is-Apache-Flink\"><span class=\"toc-text\">What is Apache Flink?</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Application-scenarios\"><span class=\"toc-text\">Application scenarios</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Lambda%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">Lambda架构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5\"><span class=\"toc-text\">设计理念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%84%E6%88%90\"><span class=\"toc-text\">组成</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">系统架构</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Exactly-Once%E8%AF%AD%E4%B9%89\"><span class=\"toc-text\">Exactly-Once语义</span></a></li></ol>","author":{"name":"Zoey","slug":"zoey","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"love music,love life~","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Spark","uid":"e346a4b057af7bc50ce0cb6886d2aa96","slug":"Spark","date":"2022-05-17T01:51:50.000Z","updated":"2022-05-17T01:52:12.150Z","comments":true,"path":"api/articles/Spark.json","keywords":null,"cover":null,"text":"采用RDD模型批计算，将DAG划分为不同的stagespark streaming: ","link":"","photos":[],"count_time":{"symbolsCount":43,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Knowledge","slug":"Knowledge","count":4,"path":"api/tags/Knowledge.json"}],"author":{"name":"Zoey","slug":"zoey","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"love music,love life~","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Flume","uid":"f6c5ab269c53087419eb1c0be5e917d0","slug":"Flume","date":"2022-05-12T11:20:05.000Z","updated":"2022-05-15T13:52:30.479Z","comments":true,"path":"api/articles/Flume.json","keywords":null,"cover":[],"text":"是什么？高可用、高可靠、分布式的海量日志采集、聚合、传输系统。Flume基于流式架构，灵活简单，实时的动态采集。能够采集多种形式源数据文件、socket数据包、kafka等，输出到HDFS、HBase、Hive、kafka等。 由Flume OG–&gt;到Flume NG:Fl...","link":"","photos":[],"count_time":{"symbolsCount":774,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Knowledge","slug":"Knowledge","count":4,"path":"api/tags/Knowledge.json"}],"author":{"name":"Zoey","slug":"zoey","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"love music,love life~","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}